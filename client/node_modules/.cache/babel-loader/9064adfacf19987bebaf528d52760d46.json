{"ast":null,"code":"var _jsxFileName = \"/Users/ioacademy/sites/academyServer/html/example/2021-march-parkingApp/client/src/Component/SearchResults/SearchResults.js\",\n    _s = $RefreshSig$();\n\nimport './SearchResults.css';\nimport Search from './../Search/Search';\nimport AvailableCarPark from '../AvailableCarPark/AvailableCarPark';\nimport { useEffect, useState } from 'react';\nimport NoCarParks from '../NoCarParks/NoCarParks';\nimport Logo from './../Logo/Logo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResults = props => {\n  _s();\n\n  const [availableCarParks, setCarParks] = useState([]);\n\n  const displayAvailableCarParks = availableCarParks => {\n    return availableCarParks.map(availableCarPark => {\n      return /*#__PURE__*/_jsxDEV(AvailableCarPark, {\n        id: availableCarPark._id,\n        name: availableCarPark.name,\n        location: availableCarPark.location,\n        availableSpaces: availableCarPark.availableSpaces,\n        hourlyRate: availableCarPark.hourlyRate,\n        duration: duration\n      }, availableCarPark._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  const {\n    duration\n  } = props.match.params;\n  useEffect(() => {\n    fetch('http://localhost:9000/availableCarParks' + '?duration=' + duration).then(res => res.json()).then(data => {\n      if (data.success) {\n        setCarParks(displayAvailableCarParks(data.data));\n      } else {\n        setCarParks( /*#__PURE__*/_jsxDEV(NoCarParks, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }, this));\n      }\n    }).catch(() => setCarParks( /*#__PURE__*/_jsxDEV(NoCarParks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 38\n    }, this)));\n  }, [props.match.params]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"search-results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Search results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      duration: duration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Available car parks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), availableCarParks]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchResults, \"UShRBlKFxzpPGhEH76DjeolyI64=\");\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/ioacademy/sites/academyServer/html/example/2021-march-parkingApp/client/src/Component/SearchResults/SearchResults.js"],"names":["Search","AvailableCarPark","useEffect","useState","NoCarParks","Logo","SearchResults","props","availableCarParks","setCarParks","displayAvailableCarParks","map","availableCarPark","_id","name","location","availableSpaces","hourlyRate","duration","match","params","fetch","then","res","json","data","success","catch"],"mappings":";;;AAAA,OAAO,qBAAP;AACA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAK,CAACC,iBAAD,EAAoBC,WAApB,IAAmCN,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMO,wBAAwB,GAAIF,iBAAD,IAAuB;AACpD,WAAOA,iBAAiB,CAACG,GAAlB,CAAuBC,gBAAD,IAAsB;AAC/C,0BAAO,QAAC,gBAAD;AAA6C,QAAA,EAAE,EAAEA,gBAAgB,CAACC,GAAlE;AAAuE,QAAA,IAAI,EAAED,gBAAgB,CAACE,IAA9F;AAAoG,QAAA,QAAQ,EAAEF,gBAAgB,CAACG,QAA/H;AAAyI,QAAA,eAAe,EAAEH,gBAAgB,CAACI,eAA3K;AAA4L,QAAA,UAAU,EAAEJ,gBAAgB,CAACK,UAAzN;AAAqO,QAAA,QAAQ,EAAEC;AAA/O,SAAuBN,gBAAgB,CAACC,GAAxC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAMA,QAAM;AAACK,IAAAA;AAAD,MAAaX,KAAK,CAACY,KAAN,CAAYC,MAA/B;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,KAAK,CAAC,4CAA4C,YAA5C,GAA2DH,QAA5D,CAAL,CACKI,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,UAAIA,IAAI,CAACC,OAAT,EAAkB;AACdjB,QAAAA,WAAW,CAACC,wBAAwB,CAACe,IAAI,CAACA,IAAN,CAAzB,CAAX;AACH,OAFD,MAEO;AACHhB,QAAAA,WAAW,eAAC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAAD,CAAX;AACH;AACJ,KARL,EASKkB,KATL,CASW,MAAMlB,WAAW,eAAC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAD,CAT5B;AAUH,GAXQ,EAWP,CAACF,KAAK,CAACY,KAAN,CAAYC,MAAb,CAXO,CAAT;AAaA,sBACI;AAAM,IAAA,SAAS,EAAC,0BAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAOKV,iBAPL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAnCD;;GAAMF,a;;KAAAA,a;AAqCN,eAAeA,aAAf","sourcesContent":["import './SearchResults.css'\nimport Search from './../Search/Search'\nimport AvailableCarPark from '../AvailableCarPark/AvailableCarPark'\nimport {useEffect, useState} from 'react'\nimport NoCarParks from '../NoCarParks/NoCarParks'\nimport Logo from './../Logo/Logo'\n\nconst SearchResults = (props) => {\n    const[availableCarParks, setCarParks] = useState([])\n\n    const displayAvailableCarParks = (availableCarParks) => {\n        return availableCarParks.map((availableCarPark) => {\n            return <AvailableCarPark key={availableCarPark._id} id={availableCarPark._id} name={availableCarPark.name} location={availableCarPark.location} availableSpaces={availableCarPark.availableSpaces} hourlyRate={availableCarPark.hourlyRate} duration={duration} />\n        })\n    }\n\n    const {duration} = props.match.params\n\n    useEffect(() => {\n        fetch('http://localhost:9000/availableCarParks' + '?duration=' + duration)\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    setCarParks(displayAvailableCarParks(data.data))\n                } else {\n                    setCarParks(<NoCarParks />)\n                }\n            })\n            .catch(() => setCarParks(<NoCarParks />))\n    },[props.match.params])\n\n    return (\n        <main className=\"search-results-container\">\n            <div className=\"search-results-header\">\n                <h1>Search results</h1>\n                <Logo />\n            </div>\n            <Search duration={duration}/>\n            <h6>Available car parks</h6>\n            {availableCarParks}\n        </main>\n    )\n}\n\nexport default SearchResults"]},"metadata":{},"sourceType":"module"}